import torch
import numpy as np
import networkx as nx
import matplotlib.pyplot as plt
from torch_geometric.datasets import TUDataset

dataset = TUDataset(root='./data/ENZYMES', name='ENZYMES')

def graph_showing(data):
    '''
    args:
         data: torch_geometric.data.Data
    '''
    G = nx.Graph()
    edge_index = data['edge_index'].t()
    #     print(edge_index)
    edge_index = np.array(edge_index.cpu())
    #     print(edge_index)

    G.add_edges_from(edge_index)
    pos = nx.spring_layout(G)
    nc = nx.draw_networkx(G, pos=pos, with_labels=True, node_size=100,
                          font_size=8,
                          edge_color='gray', cmap=plt.cm.tab20_r)
    plt.savefig('./ENZYMES.png')



# graph_showing(dataset[0])


pre =[5, 5, 1, 5, 5, 1, 3, 2, 5, 5, 5, 4, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 5, 3, 5, 5, 5, 5, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 5, 5, 3, 3, 5, 5, 5, 5, 3, 5, 3, 5, 5, 5, 5, 5, 4, 4, 5, 5, 5, 5, 5, 5, 3, 5, 5, 1, 5, 0, 4, 3, 4, 4, 4, 4, 2, 4, 4, 4, 5, 5, 3, 4, 4, 0, 3, 3, 3, 4, 4, 4, 4, 4, 4, 3, 4, 3, 4, 4, 4, 4, 5, 4, 4, 4, 4, 4, 2, 4, 4, 4, 3, 4, 4, 4, 5, 5, 5, 3, 4, 2, 4, 4, 3, 4, 4, 4, 4, 4, 3, 5, 5, 4, 1, 5, 5, 3, 4, 5, 4, 3, 4, 5, 0, 3, 3, 3, 4, 4, 4, 5, 4, 3, 3, 0, 3, 5, 3, 5, 3, 1, 3, 4, 5, 3, 3, 3, 2, 5, 5, 3, 0, 0, 0, 0, 3, 3, 0, 1, 1, 3, 1, 3, 3, 0, 1, 5, 5, 5, 3, 5, 3, 0, 4, 0, 0, 0, 1, 3, 5, 5, 5, 5, 3, 0, 5, 5, 4, 4, 5, 0, 0, 3, 2, 0, 5, 0, 1, 4, 4, 0, 1, 2, 0, 0, 0, 0, 0, 0, 1, 5, 0, 5, 5, 2, 2, 5, 0, 5, 2, 5, 0, 0, 1, 0, 3, 3, 3, 5, 3, 0, 0, 0, 0, 0, 0, 0, 3, 0, 2, 0, 0, 2, 0, 0, 0, 2, 5, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 5, 1, 1, 2, 5, 0, 0, 0, 2, 3, 5, 5, 3, 1, 1, 1, 1, 1, 4, 1, 1, 1, 1, 0, 1, 5, 5, 4, 1, 2, 3, 2, 1, 1, 4, 5, 3, 3, 3, 5, 5, 1, 1, 3, 4, 1, 1, 0, 5, 0, 1, 5, 1, 1, 2, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 0, 1, 4, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 3, 3, 2, 2, 2, 2, 2, 2, 5, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 5, 2, 2, 2, 1, 0, 2, 4, 2, 2, 1, 2, 2, 2, 5, 2, 2, 2, 4, 2, 2, 2, 2, 2, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 3, 5, 2, 2, 2, 5, 2, 3, 2, 4, 3, 2, 2, 2, 2, 2, 2, 2, 5, 0, 2, 2, 5, 5, 2, 5, 2, 2, 0, 2, 2, 3, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 3, 3, 1, 3, 3, 3, 3, 4, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 3, 3, 3, 2, 2, 2, 3, 3, 4, 3, 3, 3, 3, 5, 4, 3, 3, 3, 3, 3, 5, 3, 3, 3, 3, 3, 1, 5, 5, 3, 2, 2, 3, 3, 3, 5, 2, 5, 3, 2, 2, 2, 2, 2, 3, 3]
real = [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
# pre=pre[::10]
# real=real[::10]
plt.figure()
plt.xlabel("number")  # x轴上的名字
plt.ylabel("label")  # y轴上的名字
x=[]
for i in range(600):
    x.append(i)
# x=x[::10]

plt.plot(x,pre,'r',label='prediction')
plt.plot(x,real,'b',label='real')

# plt.scatter(x,pre,color='red',label='prediction')
# plt.scatter(x,real,color='blue',label='real')

plt.legend(loc='best')
plt.savefig('./enzymes_label2.png')
plt.show()
